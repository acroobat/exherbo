# Copyright 2012, 2014 Benedikt Morbach <benedikt.morbach@googlemail.com>
# Distributed under the terms of the GNU General Public License v2

# Exlib for projects hosted on github
#
# Many of the exparams can be set using variables as well.
# However, you should pass them explicitly whenever possible!
#
# A quick guide to which exparam to set, as github has a few different downloads APIs:
#
# If the download url looks like
#   https://github.com/{user}/{project}/releases/download/{release}/{pnv}.{suffix}
#   set 'suffix' and 'release'  (new releases API)
#
# If the download url looks like
#   https://github.com/downloads/{user}/{project}/{pnv}.{suffix}
#   only set 'suffix'  (deprecated downloads API)
#
# If the download url looks like
#   https://github.com/{user}/{project}/archive/{something}.tar.gz
#   set one of 'tag' or 'rev',
#   depending on if you want to download a tag or a specific non-tagged revision


# Name of the package (should normally match the repository on github)
myexparam pn=${MY_PN:-${PN}}
# Name of the user/organization that owns the repository on github
myexparam user=$(exparam pn)
# Name of the repository on github, if it differs from the package name
myexparam project=$(exparam pn)
# Force building from a git clone
myexparam -b force_git_clone=false

download_type=''

# Automatically generated tarballs from git trees (see below) always use tar.gz
# For manually generated tarballs, this must be set.
myexparam suffix=

if [[ -n $(exparam suffix) ]]; then
    # There are two APIs that github has used for this; the new "releases" API
    # and the old "downloads" API.
    # github has deprecated the downloads API and it might vanish in the future.
    # For the releases API, set this to the name of the tag for the release
    myexparam release=
    myexparam pv=${MY_PV:-${PV}}
    myexparam pnv=${MY_PNV:-$(exparam pn)-$(exparam pv)}

    if [[ -n $(exparam release) ]]; then
        download_type=releases
    else
        download_type=downloads
    fi
else
    # The tag and rev options are used only for autogenerated tar files.
    # Name of a tag. Use this if you are packaging a release!
    # You often want something like  tag=v${PV}
    myexparam tag=${GITHUB_TAG:-${MY_PV:-${PV}}}
    # Short git revision. Use this if you want to package an unreleased snapshot
    myexparam rev=${GITHUB_REVISION}

    download_type=autogenerated
fi

if ever is_scm || exparam -b force_git_clone; then
    # Name of a git branch. Can only be used for scm versions
    myexparam branch=${GITHUB_BRANCH}

    download_type=scm
fi

HOMEPAGE="https://codeberg.org/$(exparam user)/$(exparam project)"
REMOTE_IDS+=" codeberg:$(exparam user)/$(exparam project) "

case ${download_type} in
scm)
    SCM_REPOSITORY="https://codeberg.org/$(exparam user)/$(exparam project).git"
    if ever is_scm; then
        exparam -v SCM_BRANCH branch
    else
        exparam -v SCM_TAG tag
    fi
    require scm-git
;;
releases)
    DOWNLOADS="https://codeberg.org/$(exparam user)/$(exparam project)/releases/download/$(exparam release)/$(exparam pnv).$(exparam suffix)"
    WORK="${WORKBASE}"/$(exparam pnv)-{$PV}
;;
downloads)
    DOWNLOADS="https://codeberg.org/downloads/$(exparam user)/$(exparam project)/$(exparam pnv).$(exparam suffix)"
    WORK="${WORKBASE}"/$(exparam pnv)-{$PV}
;;
autogenerated)
    if [[ -n $(exparam rev) ]] ; then
        exparam -v what rev
        exparam -v version rev

        [[ ${#what} -eq 40 && ${what} =~ ^[[:alnum:]]+$ ]] || \
            die "${what} does not look like a git revision. You probably want to use the 'tag' exparam"
    elif [[ -n $(exparam tag) ]] ; then
        exparam -v what tag
        exparam -v version tag
        # The following is undocumented, I asked via mail:
        # So, the "v" is stripped (if followed by a number), and anything that's not alphanumeric or not "_", "-", "." is replaced with a "-". And multiple "-" in a row are replaced with a single "-".
        [[ ${version} =~ ^v[0-9] ]] && version=${version#v}
        version=${version//[^-._[:alnum:]]/-}
        version=${version//-+(-)/-}
    fi

    work=$(exparam project)
    archive=$(exparam pn)-${version}

    DOWNLOADS="https://codeberg.org/$(exparam user)/$(exparam project)/archive/${what}.tar.gz -> ${archive}.tar.gz"
    WORK="${WORKBASE}/${work}"
;;
*)
    die 'detecting codeberg downloads API went wrong. This should be theoretically impossible'
;;
esac

if has $(exparam suffix) zip ; then
    DEPENDENCIES+="
        build:
            virtual/unzip"
fi

